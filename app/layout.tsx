// // app/layout.tsx
// import React from 'react';
// import { createTheme, ThemeProvider } from '@mui/material/styles';
// import './globals.css'; // If you have any global styles

// // Create a Material UI theme
// const theme = createTheme({
//   palette: {
//     background: {
//       default: '#ffffff', // Set your desired background color
//     },
//   },
// });

// // Layout component that wraps all pages
// const RootLayout: React.FC<{ children: React.ReactNode }> = ({ children }) => {
//   return (
//     <html lang="en">
//       <body>
//         <ThemeProvider theme={theme}>
//           {children}
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// };

// export default RootLayout;


import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
